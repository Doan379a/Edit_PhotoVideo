// Generated by data binding compiler. Do not edit!
package gun0912.tedimagepicker.databinding;

import android.net.Uri;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import gun0912.tedimagepicker.R;
import gun0912.tedimagepicker.base.FastScroller;
import gun0912.tedimagepicker.builder.type.SelectType;
import java.lang.Deprecated;
import java.lang.Object;
import java.util.List;

public abstract class LayoutTedImagePickerContentBinding extends ViewDataBinding {
  @NonNull
  public final FastScroller fastScroller;

  @NonNull
  public final LayoutTedImagePickerPartialAccessManageBinding layoutTedImagePickerPartialAccessManage;

  @NonNull
  public final RecyclerView rvMedia;

  @NonNull
  public final RecyclerView rvSelectedMedia;

  @NonNull
  public final FrameLayout viewSelectedMedia;

  @Bindable
  protected SelectType mSelectType;

  @Bindable
  protected List<Uri> mItems;

  protected LayoutTedImagePickerContentBinding(Object _bindingComponent, View _root,
      int _localFieldCount, FastScroller fastScroller,
      LayoutTedImagePickerPartialAccessManageBinding layoutTedImagePickerPartialAccessManage,
      RecyclerView rvMedia, RecyclerView rvSelectedMedia, FrameLayout viewSelectedMedia) {
    super(_bindingComponent, _root, _localFieldCount);
    this.fastScroller = fastScroller;
    this.layoutTedImagePickerPartialAccessManage = layoutTedImagePickerPartialAccessManage;
    this.rvMedia = rvMedia;
    this.rvSelectedMedia = rvSelectedMedia;
    this.viewSelectedMedia = viewSelectedMedia;
  }

  public abstract void setSelectType(@Nullable SelectType selectType);

  @Nullable
  public SelectType getSelectType() {
    return mSelectType;
  }

  public abstract void setItems(@Nullable List<Uri> items);

  @Nullable
  public List<Uri> getItems() {
    return mItems;
  }

  @NonNull
  public static LayoutTedImagePickerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_ted_image_picker_content, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutTedImagePickerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutTedImagePickerContentBinding>inflateInternal(inflater, R.layout.layout_ted_image_picker_content, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutTedImagePickerContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_ted_image_picker_content, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutTedImagePickerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutTedImagePickerContentBinding>inflateInternal(inflater, R.layout.layout_ted_image_picker_content, null, false, component);
  }

  public static LayoutTedImagePickerContentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutTedImagePickerContentBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (LayoutTedImagePickerContentBinding)bind(component, view, R.layout.layout_ted_image_picker_content);
  }
}
