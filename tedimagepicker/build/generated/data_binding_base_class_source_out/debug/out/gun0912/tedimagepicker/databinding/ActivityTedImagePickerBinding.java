// Generated by data binding compiler. Do not edit!
package gun0912.tedimagepicker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import gun0912.tedimagepicker.R;
import gun0912.tedimagepicker.builder.type.ButtonGravity;
import gun0912.tedimagepicker.model.Album;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityTedImagePickerBinding extends ViewDataBinding {
  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final LayoutTedImagePickerContentBinding layoutContent;

  @NonNull
  public final LayoutSelectedAlbumDropDownBinding layoutSelectedAlbumDropDown;

  @NonNull
  public final RecyclerView rvAlbum;

  @NonNull
  public final RecyclerView rvAlbumDropDown;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final ConstraintLayout viewBottom;

  @NonNull
  public final LayoutDoneButtonBinding viewDoneBottom;

  @NonNull
  public final LayoutDoneButtonBinding viewDoneTop;

  @NonNull
  public final LinearLayout viewSelectedAlbum;

  @NonNull
  public final FrameLayout viewSelectedAlbumDropDown;

  @Bindable
  protected Album mSelectedAlbum;

  @Bindable
  protected ButtonGravity mButtonGravity;

  @Bindable
  protected boolean mShowButton;

  @Bindable
  protected String mButtonText;

  @Bindable
  protected Integer mButtonBackground;

  @Bindable
  protected Integer mButtonTextColor;

  @Bindable
  protected boolean mButtonDrawableOnly;

  @Bindable
  protected boolean mIsAlbumOpened;

  @Bindable
  protected String mImageCountFormat;

  protected ActivityTedImagePickerBinding(Object _bindingComponent, View _root,
      int _localFieldCount, DrawerLayout drawerLayout,
      LayoutTedImagePickerContentBinding layoutContent,
      LayoutSelectedAlbumDropDownBinding layoutSelectedAlbumDropDown, RecyclerView rvAlbum,
      RecyclerView rvAlbumDropDown, Toolbar toolbar, ConstraintLayout viewBottom,
      LayoutDoneButtonBinding viewDoneBottom, LayoutDoneButtonBinding viewDoneTop,
      LinearLayout viewSelectedAlbum, FrameLayout viewSelectedAlbumDropDown) {
    super(_bindingComponent, _root, _localFieldCount);
    this.drawerLayout = drawerLayout;
    this.layoutContent = layoutContent;
    this.layoutSelectedAlbumDropDown = layoutSelectedAlbumDropDown;
    this.rvAlbum = rvAlbum;
    this.rvAlbumDropDown = rvAlbumDropDown;
    this.toolbar = toolbar;
    this.viewBottom = viewBottom;
    this.viewDoneBottom = viewDoneBottom;
    this.viewDoneTop = viewDoneTop;
    this.viewSelectedAlbum = viewSelectedAlbum;
    this.viewSelectedAlbumDropDown = viewSelectedAlbumDropDown;
  }

  public abstract void setSelectedAlbum(@Nullable Album selectedAlbum);

  @Nullable
  public Album getSelectedAlbum() {
    return mSelectedAlbum;
  }

  public abstract void setButtonGravity(@Nullable ButtonGravity buttonGravity);

  @Nullable
  public ButtonGravity getButtonGravity() {
    return mButtonGravity;
  }

  public abstract void setShowButton(boolean showButton);

  public boolean getShowButton() {
    return mShowButton;
  }

  public abstract void setButtonText(@Nullable String buttonText);

  @Nullable
  public String getButtonText() {
    return mButtonText;
  }

  public abstract void setButtonBackground(@Nullable Integer buttonBackground);

  @Nullable
  public Integer getButtonBackground() {
    return mButtonBackground;
  }

  public abstract void setButtonTextColor(@Nullable Integer buttonTextColor);

  @Nullable
  public Integer getButtonTextColor() {
    return mButtonTextColor;
  }

  public abstract void setButtonDrawableOnly(boolean buttonDrawableOnly);

  public boolean getButtonDrawableOnly() {
    return mButtonDrawableOnly;
  }

  public abstract void setIsAlbumOpened(boolean isAlbumOpened);

  public boolean getIsAlbumOpened() {
    return mIsAlbumOpened;
  }

  public abstract void setImageCountFormat(@Nullable String imageCountFormat);

  @Nullable
  public String getImageCountFormat() {
    return mImageCountFormat;
  }

  @NonNull
  public static ActivityTedImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_ted_image_picker, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityTedImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityTedImagePickerBinding>inflateInternal(inflater, R.layout.activity_ted_image_picker, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityTedImagePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_ted_image_picker, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityTedImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityTedImagePickerBinding>inflateInternal(inflater, R.layout.activity_ted_image_picker, null, false, component);
  }

  public static ActivityTedImagePickerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityTedImagePickerBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityTedImagePickerBinding)bind(component, view, R.layout.activity_ted_image_picker);
  }
}
